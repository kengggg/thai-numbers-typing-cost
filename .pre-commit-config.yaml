# Pre-commit configuration for Thai Numbers Typing Cost Analysis
# Install with: pre-commit install
# Run manually with: pre-commit run --all-files

repos:
  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python formatting
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=120']
        files: '\.py$'

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=120']
        files: '\.py$'

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=120', '--extend-ignore=E203,W503']
        files: '\.py$'

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', 'src/', '-f', 'json', '-o', 'bandit-report.json']
        files: '\.py$'
        pass_filenames: false

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.4.1
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports', '--disallow-untyped-defs']
        files: 'src/.*\.py$'
        additional_dependencies: [types-setuptools]

  # Documentation checks
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google', '--add-ignore=D100,D101,D102,D103,D104,D105,D107']
        files: 'src/.*\.py$'

  # Upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.10.1
    hooks:
      - id: pyupgrade
        args: ['--py38-plus']
        files: '\.py$'

  # Remove unused imports
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.0
    hooks:
      - id: autoflake
        args: ['--remove-all-unused-imports', '--remove-unused-variables', '--in-place']
        files: '\.py$'

  # Test file checks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: python -m pytest --collect-only
        language: system
        files: 'tests/.*\.py$'
        pass_filenames: false
        stages: [commit]

      # Custom hook to ensure test file naming
      - id: test-naming
        name: test-naming
        entry: python -c "import sys; [sys.exit(1) for f in sys.argv[1:] if 'test' in f and not (f.startswith('test_') or f.endswith('_test.py') or 'tests' in f)]"
        language: system
        files: '.*test.*\.py$'

      # Check that all test files have proper pytest markers
      - id: pytest-markers
        name: pytest-markers
        entry: python -c "
import sys;
import ast;
for filepath in sys.argv[1:]:
    if 'test_' in filepath:
        with open(filepath) as f:
            content = f.read();
            if 'pytestmark' not in content and '@pytest.mark' not in content and filepath.endswith('.py'):
                print(f'Missing pytest markers in {filepath}');
                sys.exit(1)
        "
        language: system
        files: 'tests/.*test.*\.py$'

  # JSON/YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [json, yaml]
        exclude: '\.github/workflows/.*\.yml$'  # GitHub Actions workflows have specific formatting

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        files: '\.sh$'

# Global configuration
default_stages: [commit]
fail_fast: false

# Exclude patterns
exclude: |
  (?x)(
    ^\.tox/|
    ^\.venv/|
    ^venv/|
    ^build/|
    ^dist/|
    ^\.git/|
    ^__pycache__/|
    \.pyc$|
    \.pyo$|
    ^output/|
    ^htmlcov/|
    ^\.coverage|
    ^coverage\.xml$|
    ^bandit-report\.json$|
    ^safety-report\.json$|
    ^benchmark-report\.json$
  )