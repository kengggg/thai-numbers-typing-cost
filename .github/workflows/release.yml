name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  test:
    name: Pre-release Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install tox

    - name: Run full test suite
      run: |
        tox -e py311
        tox -e lint
        tox -e type-check
        tox -e security
        tox -e validation

    - name: Run integration tests
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}/src"
        python -m pytest tests/integration/ -v

  build:
    name: Build Release Assets
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Extract version from tag
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

    - name: Generate comprehensive analysis sample
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}/src"
        cd src
        
        # Generate sample outputs for release
        python main.py ../data/thai-con.txt --compare-all --output-json ../release_sample.json
        python main.py --render-from-json ../release_sample.json --format markdown --output ../
        python main.py --render-from-json ../release_sample.json --format console > ../sample_console_output.txt

    - name: Create release package
      run: |
        mkdir -p release-package
        
        # Copy source code
        cp -r src/ release-package/
        cp -r tests/ release-package/
        cp -r data/ release-package/
        
        # Copy documentation
        cp README.md CLAUDE.md PRD.txt release-package/
        cp requirements-test.txt pytest.ini tox.ini release-package/
        
        # Copy sample outputs
        cp release_sample.json release-package/sample_analysis.json
        cp *.md release-package/ || true
        cp sample_console_output.txt release-package/ || true
        
        # Create runner script
        cat > release-package/run_analysis.py << 'EOF'
        #!/usr/bin/env python3
        """
        Easy runner script for Thai Numbers Typing Cost Analysis
        """
        import sys
        import os
        from pathlib import Path
        
        # Add src to path
        sys.path.insert(0, str(Path(__file__).parent / "src"))
        
        from main import main
        
        if __name__ == "__main__":
            main()
        EOF
        
        chmod +x release-package/run_analysis.py
        
        # Create archive
        tar -czf thai-numbers-typing-cost-${{ steps.version.outputs.version_number }}.tar.gz release-package/
        zip -r thai-numbers-typing-cost-${{ steps.version.outputs.version_number }}.zip release-package/

    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        # Thai Numbers Typing Cost Analysis ${{ steps.version.outputs.version }}
        
        ## 🎯 Research Focus
        Direct comparison of Thai digits (๐-๙) vs International digits (0-9) typing costs in Thai government documents.
        
        ## 📊 Key Features
        - **Comprehensive Analysis**: Full typing cost analysis across different keyboard layouts
        - **JSON-First Architecture**: Portable data format with multiple output renderers
        - **Multi-Typist Support**: Analysis for different skill levels (Expert, Skilled, Average, Worst)
        - **Government Scale Projections**: Impact analysis for ministry and government-wide adoption
        - **CLI Interface**: Command-line tool with extensive options
        
        ## 🚀 Quick Start
        ```bash
        # Extract the release package
        tar -xzf thai-numbers-typing-cost-${{ steps.version.outputs.version_number }}.tar.gz
        cd release-package
        
        # Run basic analysis
        python run_analysis.py data/thai-con.txt
        
        # Generate comprehensive report
        python run_analysis.py data/thai-con.txt --compare-all --markdown-report
        
        # JSON-first workflow
        python run_analysis.py data/thai-con.txt --output-json results.json
        python run_analysis.py --render-from-json results.json --format markdown
        ```
        
        ## 🧪 Testing
        ```bash
        # Install test dependencies
        pip install -r requirements-test.txt
        
        # Run full test suite
        python -m pytest
        
        # Run validation tests
        python -m pytest tests/validation/
        ```
        
        ## 📁 Package Contents
        - `src/` - Source code
        - `tests/` - Comprehensive test suite
        - `data/` - Sample Thai constitution data
        - `sample_analysis.json` - Example JSON output
        - `run_analysis.py` - Easy runner script
        - `README.md`, `CLAUDE.md`, `PRD.txt` - Documentation
        
        ## 🎯 Key Research Finding
        **Thai digits on Kedmanee keyboard require SHIFT key, creating 2x typing cost penalty**
        
        This research demonstrates measurable efficiency gains from switching to international digits, with government-scale impact projections showing thousands of hours saved annually.
        
        ---
        
        For detailed analysis methodology and findings, see the included documentation and sample outputs.
        EOF

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-assets
        path: |
          *.tar.gz
          *.zip
          release_notes.md

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-assets

    - name: Extract version from tag
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Thai Numbers Typing Cost Analysis ${{ steps.version.outputs.version }}
        body_path: release_notes.md
        files: |
          *.tar.gz
          *.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Post-release Notifications
    runs-on: ubuntu-latest
    needs: create-release
    if: always()
    
    steps:
    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Success notification
      if: needs.create-release.result == 'success'
      run: |
        echo "✅ Release ${{ steps.version.outputs.version }} created successfully!"
        echo "🎉 Thai Numbers Typing Cost Analysis is now available for download"
        echo "📦 Release includes comprehensive analysis tools and documentation"

    - name: Failure notification
      if: needs.create-release.result == 'failure'
      run: |
        echo "❌ Release ${{ steps.version.outputs.version }} failed!"
        echo "🔍 Check the logs above for details"
        exit 1